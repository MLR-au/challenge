"use strict";angular.module("challengeApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ui.bootstrap"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl"}).otherwise({redirectTo:"/"})}]),angular.module("challengeApp").controller("MainCtrl",["$scope",function(a){}]),angular.module("challengeApp").controller("AboutCtrl",["$scope",function(a){a.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}]),angular.module("challengeApp").directive("renderLayer",["$rootScope","$log","maps","renderingService",function(a,b,c,d){return{template:"",restrict:"E",scope:{dimensions:"="},link:function(e,f,g){e.layers=c.mapData;var h=function(a,b){var c=a.bounds(b),d=.95/Math.max((c[1][0]-c[0][0])/e.dimensions.width,(c[1][1]-c[0][1])/e.dimensions.height),f=[(e.dimensions.width-d*(c[1][0]+c[0][0]))/2,(e.dimensions.height-d*(c[1][1]+c[0][1]))/2];e.transform={scale:d,translate:f}},i=function(c,f){b.info("Drawing: ",c.name);var g=topojson.feature(c.data,c.data.objects[c.name]),j=d3.geo.mercator().scale(1).translate([0,0]),k=d3.geo.path().projection(j);"first"===f&&h(k,g),j.scale(e.transform.scale).translate(e.transform.translate),d.projection=j,d3.select("svg").select("g").selectAll("."+c.name).data(g.features).enter().append("path").attr("class",c.name).attr("d",k),_.isEmpty(e.layers)?a.$broadcast("all-map-layers-drawn"):i(e.layers.shift())};i(e.layers.shift(),"first")}}}]),angular.module("challengeApp").directive("mapControls",["$log","$window","$timeout","busService","renderingService",function(a,b,c,d,e){return{templateUrl:"views/map-controls.html",restrict:"E",scope:{},link:function(a,e,f){a.busInformation={},a.status={routes:!0,busInformation:!1},a.mapControlStyle={position:"relative",height:b.innerHeight-5,overflow:"auto","border-radius":"4px"},a.$on("all-map-layers-drawn",function(){a.routes=d.routes,d.getRoutes(),c(function(){a.update()},15e3)}),a.update=function(){d.getVehicleLocations(),c(function(){a.update()},15e3)},a.selectRoute=function(a){d.toggleRoute(a)},a.selectedRoutes=d.selectedRoutes,a.$watch("selectedRoutes",function(b,c){_.isEmpty(a.selectedRoutes)?(a.status.routes=!0,a.status.busInformation=!1,a.busInformation={}):(a.status.routes=!1,a.status.busInformation=!0,a.busInformation={},_.each(a.selectedRoutes,function(b){a.busInformation[b]=d.routes[b]}))},!0)}}}]),angular.module("challengeApp").directive("renderMap",["$window","$log","maps","configuration",function(a,b,c,d){return{templateUrl:"views/render-map.html",restrict:"E",scope:{},link:function(e,f,g){e.loading=!0;var h=f[0].offsetParent.clientWidth-30,i=a.innerHeight;d3.select("#map").append("svg").attr("width",h).attr("height",i).append("g"),b.info("SVG appended to div."),c.get(d.layers),e.$on("render-maps",function(){e.dimensions={width:h,height:i},e.loading=!1,e.renderLayers=!0})}}}]),angular.module("challengeApp").service("maps",["$http","$log","$rootScope",function(a,b,c){function d(c){_.isArray(c)||(c=[c]);var d=c.shift(),g="/data/topojson/"+d+".json";a.get(g).then(function(a){b.debug(d,a.data),f.mapData.push({name:d,data:a.data}),e(c)},function(a){b.error("Couldn't retrieve data for: ",d)})}function e(a){_.isEmpty(a)?c.$broadcast("render-maps"):f.get(a)}var f={mapData:[],get:d};return f}]),angular.module("challengeApp").service("busService",["$rootScope","$log","$resource","maps","renderingService","configuration",function(a,b,c,d,e,f){function g(a){var b=new DOMParser,c=b.parseFromString(a,"text/xml"),d=_.reject(c.documentElement.childNodes,function(a){return a.nodeType===Node.TEXT_NODE});return{nodes:d}}function h(a,b,c){var d={};return angular.forEach(b,function(b,c){d[b]=a.getAttribute(b)}),_.extend(d,c)}function i(){var a=m.resource.get({command:"routeList"},function(){_.each(a.nodes,function(a){var b=h(a,["tag","title"],{selected:!0,paths:[],stops:[]});m.routes[b.tag]=b}),m.routeTags=_.pluck(m.routes,"tag"),m.getVehicleLocations()})}function j(){var a={},b=[];angular.forEach(m.routeTags,function(c,d){var e=c;b.push(e);var f=(void 0===m.routeLocationsLastTime[e]?"0":m.routeLocationsLastTime[e].time,m.resource.get({command:"vehicleLocations",r:e,t:"0"},function(){_.each(f.nodes,function(b){if("vehicle"===b.localName){var b=h(b,["id","routeTag","dirTag","lat","lon","secsSinceReport"]);a[b.routeTag+b.id]=b}else"lastTime"===b.localName&&(m.routeLocationsLastTime[e]=h(b,["time"]))});b.splice(b.indexOf(e),1),_.isEmpty(b)&&k(a)}))})}function k(a){b.info("Updating vehicle locations"),angular.forEach(m.locations,function(b,c){if(void 0!==a[b.routeTag+b.id]){var d=b.routeTag+b.id;m.locations[c]=a[d],delete a[d]}}),angular.forEach(a,function(a,b){m.locations.push(a)}),e.renderVehicleLocations(m.locations)}function l(a){if(-1===m.selectedRoutes.indexOf(a))if(m.selectedRoutes.push(a),_.isEmpty(m.routes[a].paths))var b=m.resource.get({command:"routeConfig",r:a},function(){var c=_.groupBy(g(b.nodes[0].outerHTML).nodes,function(a){return a.localName}),d=h(b.nodes[0],["latMin","latMax","lonMin","lonMax"]),f=[],i=[];_.each(c.stop,function(a){f.push(h(a,["tag","title","lat","lon","stopId"]))}),_.each(c.path,function(a){i.push(g(a.outerHTML).nodes)}),_.each(i,function(a,b){i[b]=_.map(a,function(a){var b=h(a,["lat","lon"]);return[b.lon,b.lat]})}),m.routes[a].paths=i,m.routes[a].stops=f,m.routes[a].bbox=d,e.renderPaths(a,m.routes[a].paths),e.toggleBusVisibility(m.selectedRoutes,m.locations)});else e.renderPaths(a,m.routes[a].paths),e.toggleBusVisibility(m.selectedRoutes,m.locations);else m.selectedRoutes.splice(m.selectedRoutes.indexOf(a),1),d3.selectAll(".path_route_"+a).remove(),e.toggleBusVisibility(m.selectedRoutes,m.locations);angular.forEach(m.routes,function(a,b){m.routes[b].selected=_.isEmpty(m.selectedRoutes)?!0:-1===m.selectedRoutes.indexOf(a.tag)?!1:!0})}var m={routes:{},routeTags:[],locations:[],routeLocationsLastTime:{},selectedRoutes:[],resource:c("http://webservices.nextbus.com/service/publicXMLFeed?a=sf-muni",{},{get:{command:"@command",transformResponse:g}}),getRoutes:i,getVehicleLocations:j,toggleRoute:l};return m}]),angular.module("challengeApp").constant("configuration",{layers:["neighborhoods"],colour:d3.scale.category20()}),angular.module("challengeApp").service("renderingService",["$log","configuration",function(a,b){function c(a){var c=d3.select("svg").select("g").selectAll("circle").data(a);c.transition().duration(1e3).attr("transform",function(a){return"translate("+f.projection([a.lon,a.lat])+")"}),c.enter().append("circle").attr("class",function(a){return"circle bus_route_"+a.routeTag}).attr("r","6").attr("transform",function(a){return"translate("+f.projection([a.lon,a.lat])+")"}).style("fill",function(a){return b.colour(a.routeTag)}).style("visibility",function(a){return _.isEmpty(f.selected)?"visible":-1===f.selected.indexOf(a.routeTag)?"hidden":"visible"})}function d(a,b){var c=d3.geo.path().projection(f.projection),d=[{type:"Feature",geometry:{type:"MultiLineString",coordinates:b}}];d3.select("svg").select("g").append("path").datum({type:"FeatureCollection",features:d}).attr("class","bus-routes path_route_"+a).attr("d",c).style("stroke","#FF7F0E")}function e(a,b){f.selected=a,d3.select("svg").selectAll("circle").remove(),f.renderVehicleLocations(b)}var f={selected:[],renderVehicleLocations:c,renderPaths:d,toggleBusVisibility:e};return f}]);